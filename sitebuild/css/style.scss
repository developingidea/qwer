// $types: aeg -20px -20px, alexandra -150px -20px, angelo -290px -20px, anita -430px -20px, aphroditethai -570px -20px, artz 420px -20px, bagatellini 280px -20px, budai 140px -20px, butlers -20px -80px, diva -150px -80px, coccinelle -280px -80px, dcl -420px -80px, dm -570px -80px, douglas -710px -79px, ecco -840px -80px, evital -980px -80px, extrametal -20px -130px, fotohorizont -150px -130px, furla -290px -130px, griff -430px -130px, guess -570px -130px, helly 420px -130px, hervis 280px -130px, gerry 140px -130px, iCentre -20px -180px, jatszohaz -150px -180px, laag -290px -180px, leroy -430px -180px, lukacs -570px -180px, marc 420px -180px, maxco 280px -180px, mcdonalds 140px -180px, minittop -20px -230px, medical -150px -230px, wellness -290px -230px, opi -430px -230px, nero -570px -230px, non 415px -236px, nubu 280px -230px, office 140px -230px, optic -20px -300px, pirex -150px -300px, planet -290px -300px, reserved -430px -300px, spar -570px -300px, scitec 420px -300px, silver 280px -300px, starbucks 140px -300px, homecook -20px -350px, tchibo -150px -359px, masszazs -290px -355px, mister -430px -350px, united -570px -350px, upc 420px -360px, vapiano 280px -350px, vision 140px -350px, vista 820px -420px, yves 700px -420px, zsidro 550px -420px;
// @each $type in $types {
//   .sponsors > li a[href*="#{nth($type, 1)}"] {
//     background-position: nth($type, 2) nth($type, 3);
//   }
// }


@import url(reset.css);
@import url(animations.css);
@import url(../fonts/fonts.css);
@import url(temp.css);

// CONTAINER SIZE
  $container-width: 810px;
  $container-height: 750px;

// COLORS
  // LINKS
    $link-color: #333;
    $link-hover-color: #999;
    $link-active-color: #1aa;
  // TEXT
    $text-color: #222;

// FONTS
  // FONT FAMILY
    $font-normal: 'arial', sans-serif;
    $font-bold: 'arial', sans-serif;
    $font-headline: 'arial', sans-serif;
  // FONT SIZE
    $content-font-size: 12px;
    $headline-font-size: 12px;
  // SASS INCLUDE
    .font-normal {
      font-size: 11px;
      font-family: $font-normal;
    }
    .font-bigger {
      font-size: 15px;
      font-family: $font-normal;
    }
    .font-bold {
      font-size: 11px;
      font-family: $font-bold;
    }  

// BROWSERS MIXIN
  @mixin transition($time) {
    -webkit-transition: $time;
       -moz-transition: $time;
        -ms-transition: $time;
         -o-transition: $time;
            transition: $time;
  }
  @mixin transitions($transition-property, $transition-time, $method) {
      -webkit-transition: $transition-property $transition-time $method;
      -moz-transition: $transition-property $transition-time $method;
      -ms-transition: $transition-property $transition-time $method;
      -o-transition: $transition-property $transition-time $method;
      transition: $transition-property $transition-time $method;
  }
  @mixin border-radius($border-radius) {
    -webkit-border-radius: $border-radius;
       -moz-border-radius: $border-radius;
        -ms-border-radius: $border-radius;
         -o-border-radius: $border-radius;
            border-radius: $border-radius;
  }

@mixin opacity($trans) {
    filter: alpha(opactiy=($trans * 100));
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=#{$trans * 100})";
    -moz-opacity: $trans;
    -khtml-opacity: $trans;
    opacity: $trans;
}

//****//


/* BACKGROUND GRADIENTS */

// usage example: @include background-gradient(red, black, vertical)

@mixin background-gradient($startcolor, $endcolor, $orientation) {
    background: $startcolor;
    @if $orientation == vertical {
    // vertical
      background: -moz-linear-gradient(top,  $startcolor 0%, $endcolor 100%);
      background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,$startcolor), color-stop(100%,$endcolor));
      background: -webkit-linear-gradient(top,  $startcolor 0%,$endcolor 100%);
      background: -o-linear-gradient(top,  $startcolor 0%,$endcolor 100%);
      background: -ms-linear-gradient(top,  $startcolor 0%,$endcolor 100%);
      background: linear-gradient(to bottom,  $startcolor 0%,$endcolor 100%);
      filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='$startcolor', endColorstr='$endcolor',GradientType=0 );
    }
    @else if $orientation == horizontal
    {
    // horizontal
      background: -moz-linear-gradient(left,  $startcolor 0%, $endcolor 100%);
      background: -webkit-gradient(linear, left top, right top, color-stop(0%,$startcolor), color-stop(100%,$endcolor));
      background: -webkit-linear-gradient(left,  $startcolor 0%,$endcolor 100%);
      background: -o-linear-gradient(left,  $startcolor 0%,$endcolor 100%);
      background: -ms-linear-gradient(left,  $startcolor 0%,$endcolor 100%);
      background: linear-gradient(to right,  $startcolor 0%,$endcolor 100%);
      filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='$startcolor', endColorstr='$endcolor',GradientType=1 );
    }
    @else
    {
    // radial
      background: -moz-radial-gradient(center, ellipse cover,  $startcolor 0%, $endcolor 100%);
      background: -webkit-gradient(radial, center center, 0px, center center, 100%, color-stop(0%,$startcolor), color-stop(100%,$endcolor));
      background: -webkit-radial-gradient(center, ellipse cover,  $startcolor 0%,$endcolor 100%);
      background: -o-radial-gradient(center, ellipse cover,  $startcolor 0%,$endcolor 100%);
      background: -ms-radial-gradient(center, ellipse cover,  $startcolor 0%,$endcolor 100%);
      background: radial-gradient(ellipse at center,  $startcolor 0%,$endcolor 100%);
      filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='$startcolor', endColorstr='$endcolor',GradientType=1 );
    }
}

/* BACKGROUND SIZE */

// usage example: @include background-size(100%, 100%);

@mixin background-size($width, $height) {
     -moz-background-size: $width $height;
  -webkit-background-size: $width $height;
          background-size: $width $height;
}

/* BORDER */

// usage example: @include border(2px, solid, #000);

@mixin border($thickness, $type, $color) { border: $thickness $type $color; }

/* BORDER CORNERS */

// usage example: @include border(100%, 100%, 0, 0);

@mixin border-radius-separate($topLeftRadius, $topRightRadius, $bottomLeftRadius, $bottomRightRadius) {
  -webkit-border-top-left-radius: $topLeftRadius;
  -webkit-border-top-right-radius: $topRightRadius;
  -webkit-border-bottom-right-radius: $bottomRightRadius;
  -webkit-border-bottom-left-radius: $bottomLeftRadius;

  -moz-border-radius-topleft: $topLeftRadius;
  -moz-border-radius-topright: $topRightRadius;
  -moz-border-radius-bottomright: $bottomRightRadius;
  -moz-border-radius-bottomleft: $bottomLeftRadius;

  border-top-left-radius: $topLeftRadius;
  border-top-right-radius: $topRightRadius;
  border-bottom-right-radius: $bottomRightRadius;
  border-bottom-left-radius: $bottomLeftRadius;
}

/* BOX SIZING */

// usage example: @include box-sizing(border-box);

@mixin box-sizing($type) {
  -webkit-box-sizing:$type;
  -moz-box-sizing:$type;
  box-sizing:$type;
}

/* CENTER BLOCK */

@mixin center-block {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

/* CENTERING BLOCKS ELEMENTS, HORIZONTAL, VERTICAL, BOTH */

// Important: you must have a parent element with position: relative.

@mixin center-both {
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
}

// if height is defined.
@mixin center-h($height) {
  position: absolute;
  top: 50%;
  height: $height;
  margin-top: -$height/2;
}

// if height is unknown.
@mixin center-h--unk {
  position: relative;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}

/* CLEARFIX */

%clearfix {
  *zoom: 1;
  &:before, &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}

/* DIV OUTLINE */

@mixin outline {
  box-shadow: rgba(255, 255, 255, 0.5) 0 1px 0, inset rgba(0, 0, 0, 0.75) 0 1px 0;
}

/* FONT FACES */

// usage example: @include font-face(gotham,/fonts/gotham.eot,/fonts/gotham.woff,/fonts/gotham.ttf,/fonts/gotham.svg, 300, normal);

@mixin font-face($fontFamily, $eotFileSrc, $woffFileSrc, $ttfFileSrc, $svgFileSrc, $weight, $style) {
  font-family: $fontFamily;
  src: url($eotFileSrc)  format('eot'),
       url($woffFileSrc) format('woff'),
       url($ttfFileSrc)  format('truetype'),
       url($svgFileSrc)  format('svg');
  font-weight: $weight;
  font-style: $style;
}

/* FONT SIZE */

// usage example: @include fontsize(16px);
//            or: @include fontsize(16);

@mixin fontsize($size) {
  $base-font-size: 16px !default;
  @if (unitless($size)){
    $size: $size * 1px;
  }
  font-size: $size;
  font-size: ($size / $base-font-size) * 1rem;
}

/* HARDWARE ACCELERATION */

@mixin ha {
  -webkit-transform: translate3d(0,0,0);
  -ms-transform: translate3d(0,0,0);
  -o-transform: translate3d(0,0,0);
  transform: translate3d(0,0,0);
}

/* HOVER */

// usage example: @include hover(.3s);

@mixin hover($time, $timing-function: ease-in-out) {
  -webkit-transition: all $time $timing-function;
  -o-transition: all $time $timing-function;
  -moz-transition: all $time $timing-function;
  transition: all $time $timing-function;
}

/* IMAGE RETINA */

// usage example: @include image-2x(/img/image.png, 100%, auto);

@mixin image-2x($image, $width, $height) {
  @media (min--moz-device-pixel-ratio: 1.3),
         (-o-min-device-pixel-ratio: 2.6/2),
         (-webkit-min-device-pixel-ratio: 1.3),
         (min-device-pixel-ratio: 1.3),
         (min-resolution: 1.3dppx) {
    /* on retina, use image that's scaled by 2 */
    background-image: url($image);
    background-size: $width $height;
  }
}

/* LINE HEIGHT */

// usage example: @include line-height(16);

@mixin line-height($heightValue: 12 ){
  line-height: $heightValue + px; //fallback for old browsers
  line-height: (0.125 * $heightValue) + rem;
}

/* MEDIA QUERIES */

// usage example: @include mquery(350px, 2) { width: 100%; }

@mixin mquery($width, $ratio: false) {
  @if $ratio {
      @media
      only screen and (max-width: $width) and  (min--moz-device-pixel-ratio: $ratio),
      only screen and (max-width: $width) and  (-webkit-min-device-pixel-ratio: $ratio),
      only screen and (max-width: $width) and  (min-device-pixel-ratio: $ratio) {
        @content;
      }
  } @else {
      @media only screen and (max-width: $width) {
        @content;
      }
  }
}

@mixin mquery-r($ratio) {
  @media
    only screen and (-webkit-min-device-pixel-ratio: $ratio),
    only screen and (min--moz-device-pixel-ratio: $ratio),
    only screen and (-o-min-device-pixel-ratio: $ratio),
    only screen and (min-device-pixel-ratio: $ratio) {
      @content;
  }
}

/* OPACITY */

@mixin opacity($opacity) {
  opacity: $opacity;
  filter: alpha(opacity=($opacity * 100));
}

/* BLACK / WHITE OPACITY */

// usage example: div { border: 1px solid black(.2); }

@function black($opacity) {
  @return rgba(0,0,0,$opacity);
}

@function white($opacity) {
  @return rgba(255,255,255,$opacity);
}

/* POSITION */

// usage example: @include position(absolute, 10px, null, 10px, 10px);

@mixin position($type,$left,$right,$top,$bottom) {
  position: $type;
  left: $left;
  right: $right;
  top: $top;
  bottom: $bottom;
}

/* RADIUS */

@mixin radius($radius) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  border-radius: $radius;
}

/* SCALE */

// usage example: @include scale(2);

@mixin scale($value) {
  -ms-transform: scale($value);
  -webkit-transform: scale($value);
  transform: scale($value);
}

/* SHADOWS */

// usage examples: @include shadow(black, 5px 5px 0px 3px);
//             or: @include shadow(blue, 2px 3px 2px 2px, inset);

@mixin shadow($color, $x-y-blur-spread:10px 10px 30px 0px, $inset:false) {
  @if ($inset == inset) {
      -moz-box-shadow: inset $x-y-blur-spread $color;
      -webkit-box-shadow: inset $x-y-blur-spread $color;
      -o-box-shadow: inset $x-y-blur-spread $color;
      box-shadow: inset $x-y-blur-spread $color;
  }
  @else {
      -moz-box-shadow: $x-y-blur-spread $color;
      -webkit-box-shadow: $x-y-blur-spread $color;
      -o-box-shadow: $x-y-blur-spread $color;
      box-shadow: $x-y-blur-spread $color;
  }
}

/* SIZE */

// usage example: @include size(350px, 350px);

@mixin size($width, $height) {
   width: $width;
   height: $height;
}

/* TEXT SHADOW */

@mixin textshadow($value) {
   text-shadow: rgba(255, 255, 255, $value) 0 1px 0;
}

/* TRANSLATE X */

@mixin translateX($value) {
  -webkit-transform: translateX($value);
  -ms-transform: translateX($value);
  -o-transform: translateX($value);
  transform: translateX($value);
}

/* TRANSLATE Y */

@mixin translateY($value) {
  -webkit-transform: translateY($value);
  -ms-transform: translateY($value);
  -o-transform: translateY($value);
  transform: translateY($value);
}

/* TRANSITION SCALEDOWN */

@mixin scaleDown($time:1s) {
  -webkit-animation: scaleDown $time ease-out 1;
  animation: scaleDown $time ease-out 1;
}

@keyframes scaleDown {
  0% { @include scale(1); }
  50% { @include scale(.95); };
  100% { @include scale(1); };
}

@-webkit-keyframes scaleDown {
  0% { @include scale(1); }
  50% { @include scale(.95); };
  100% { @include scale(1); };
}

/* TRANSITION SCALE UP HOVER */

@mixin scaleUp($time:1s) {
  -webkit-animation: scaleUp $time ease-in-out 1;
  animation: scaleUp $time ease-in-out 1;
}

@keyframes scaleUp {
  0% { @include scale(1); }
  50% { @include scale(1.1); };
  100% { @include scale(1); };
}

@-webkit-keyframes scaleUp {
  0% { @include scale(1); }
  50% { @include scale(1.1); };
  100% { @include scale(1); };
}

/* TRANSITION FADEIN */

@mixin fadeIn($time:1s) {
  -webkit-animation: fadeIn $time ease-out 1;
  animation: fadeIn $time ease-out 1;
}

@keyframes fadeIn {
  0% { opacity: 0; }
  to { opacity: 1; };
}

@-webkit-keyframes fadeIn {
  0% { opacity: 0; }
  to { opacity: 1; };
}

/* TRANSITION SLIDEINDOWN */

@-webkit-keyframes slideInDown {
  0% { @include translateY(-100px); opacity: 0; }
  75% { @include translateY(0); }
  100% { opacity: 1; }
}

@keyframes slideInDown {
  0% { @include translateY(-100px); opacity: 0; }
  75% { @include translateY(0); }
  100% { opacity: 1; }
}

@mixin slideInDown($time) {
  animation: slideInDown $time ease-in-out;
  -webkit-animation: slideInDown $time ease-in-out;
}

/* TRANSITION SLIDEINUP */

@-webkit-keyframes slideInUp {
  0% { @include translateY(100px); opacity: 0; }
  75% { @include translateY(0); }
  100% { opacity: 1; }
}

@keyframes slideInUp {
  0% { @include translateY(100px); opacity: 0; }
  75% { @include translateY(0); }
  100% { opacity: 1; }
}

@mixin slideInUp($time) {
  animation: slideInUp $time ease-in-out;
  -webkit-animation: slideInUp $time ease-in-out;
}

/* TRANSITION SLIDEINRIGHT */

@-webkit-keyframes slideInRight {
  0% { @include translateX(100px); opacity: 0; }
  75% { @include translateX(0); }
  100% { opacity: 1; }
}

@keyframes slideInRight {
  0% { @include translateX(100px); opacity: 0; }
  75% { @include translateX(0); }
  100% { opacity: 1; }
}

@mixin slideInRight($time) {
  animation: slideInRight $time ease-out backwards;
  -webkit-animation: slideInRight $time ease-out backwards;
}

/* TRANSITION SLIDEINLEFT */

@-webkit-keyframes slideInLeft {
  0% { @include translateX(-100px); opacity: 0; }
  75% { @include translateX(0); }
  100% { opacity: 1; }
}

@keyframes slideInRight {
  0% { @include translateX(-100px); opacity: 0; }
  75% { @include translateX(0); }
  100% { opacity: 1; }
}

@mixin slideInLeft($time) {
  animation: slideInRight $time ease-out backwards;
  -webkit-animation: slideInRight $time ease-out backwards;
}


//****//

// BASE 
  .posfix {
    position: relative;
    display: block;
    width: 100%;
    height: 100%;
  }
  .hidden {
    overflow: hidden;
  }
  .nopointerevent, .pointerevent, .pointernone {
    pointer-events: none;
  }
  [data-link], [data-function]  {
    cursor: pointer;
  }




// LAYOUT

/* HEADER */

header.site-header {
  position: fixed !important;
  top: 0px !important;
  background: rgba(20,20,20,1) !important;
  //box-shadow: 0 0 10px rgba(0,0,0,0.1);
 -webkit-backdrop-filter: saturate(180%) blur(10px);
  backdrop-filter: saturate(180%) blur(10px);
  display: -ms-flexbox;
  display: flex;
}
.site-title a {
   display: block;
   height: 100px;
   width: 250px;
   position: absolute;
   top: 30px;
   background: url(../img/black-logo.png) no-repeat;
   background-size: 100% auto;
}
.site-title a span {
   display: none;
}



.main-navigations {
    -ms-flex-pack: center;
    text-align: center;
    -webkit-flex-basis: 70%;
    flex-basis: 70%;
    -ms-flex-preferred-size: 70%;
    justify-content: center;
    display: -ms-flexbox;
    display: flex; 
}
.nav--mains [class*="current-menu-"] > a, .filter__item.active {
  position: relative;
}

.nav--mains [class*="current-menu-"] > a:before, .filter__item.active:before {
  background-image: url("assets/svg/divider.svg");
  background-position: top center;
  background-repeat: repeat-x;
  bottom: 0;
  content: "";
  display: block;
  height: 8px;
  left: 0;
  opacity: 0.25;
  position: absolute;
  right: 0;
  -webkit-transform: translateY(50%);
  transform: translateY(50%);
}

.nav--mains {
  text-transform: uppercase;
  font-weight: bold;
  line-height: 80px;
  a {
    background: none !important;
    font-size: 18px;
    line-height: 1.7;
    padding: 0.5em;
  }
}

@media only screen and (min-width: 900px) {
  .nav--mains {
    a {
      font-size: 15px;
      line-height: 1.8;
      padding: 0.25em 0;
    }
    > .menu-item > a {
      padding-left: 0.75em;
      padding-right: 0.75em;
    }
    [class*="current-menu-"] {
      > a:before {
        left: 0.75em;
        right: 0.75em;
      }
      [class*="current-menu-"] > a:before {
        left: 0;
        right: 0;
      }
    }
    .menu-item-has-children, .menu-item-language-current {
      z-index: 999;
    }
    .menu-item-has-children > a:after, .menu-item-language-current > a:after {
      content: "+";
      display: none;
      margin-left: 0.5em;
    }
    .sub-menu {
      background: black;
      border-radius: 4px;
      display: block;
      font-size: 15px;
      left: 50%;
      line-height: 1.5;
      margin-top: 3px;
      min-width: 12em;
      opacity: 0;
      opacity: 0;
      padding: 0.75em 1.25em;
      pointer-events: none;
      pointer-events: none;
      text-align: left;
      text-transform: none;
      -webkit-transform: translate(-50%, 0.5em);
      transform: translate(-50%, 0.5em);
      -webkit-transform-origin: 0 0;
      transform-origin: 0 0;
      transition: opacity 0.2s ease-out, -webkit-transform 0.2s ease-out;
      transition: opacity 0.2s ease-out, transform 0.2s ease-out;
      will-change: transform, opacity;
    }
  }
  .is--ie-le10 .nav--mains .sub-menu {
    left: 0;
    pointer-events: auto !important;
    -webkit-transform: none !important;
    transform: none !important;
  }
  .nav--mains .sub-menu {
    a {
      color: #dfdfdf;
      text-shadow: none;
    }
    &:before {
      bottom: 100%;
      content: "";
      display: block;
      height: 10px;
      left: 0;
      position: absolute;
      width: 100%;
    }
    &:after {
      border: 10px solid transparent;
      border-bottom-color: black;
      border-top: 0;
      bottom: 100%;
      content: "";
      left: 50%;
      margin-left: -10px;
      position: absolute;
    }
  }
  .is--ie-le10 .nav--mains .sub-menu:after {
    left: 12px;
    margin-bottom: -2px;
  }
  .nav--mains .sub-menu .menu-item:hover > a {
    color: white;
  }
  .no-touch .nav--mains .menu-item:hover > .sub-menu, .touch .nav--mains .menu-item.hover > .sub-menu {
    opacity: 1;
    pointer-events: auto;
    -webkit-transform: translate(-50%, 0);
    transform: translate(-50%, 0);
    transition: opacity 0.1s ease-out, -webkit-transform 0.1s ease-out;
    transition: opacity 0.1s ease-out, transform 0.1s ease-out;
  }
  .nav--mains .sub-menu {
    .sub-menu {
      margin-top: -0.75em;
      -webkit-transform: translate(0, 0.5em);
      transform: translate(0, 0.5em);
      &:after {
        display: none;
      }
    }
    .menu-item:hover > .sub-menu {
      -webkit-transform: none;
      transform: none;
    }
  }
}



.full-height .cover-container {
  height: 100vh;
  min-height: 100vh;
}
